Started GET "/" for 127.0.0.1 at 2018-08-09 12:44:04 -0500
Processing by Rails::WelcomeController#index as HTML
  Rendering /Users/carolina/.rvm/gems/ruby-2.2.8/gems/railties-5.1.6/lib/rails/templates/rails/welcome/index.html.erb
  Rendered /Users/carolina/.rvm/gems/ruby-2.2.8/gems/railties-5.1.6/lib/rails/templates/rails/welcome/index.html.erb (4.5ms)
Completed 200 OK in 345ms (Views: 20.1ms)


  [1m[35m (9.9ms)[0m  [1m[34mSELECT sqlite_version(*)[0m
  [1m[35m (1.4ms)[0m  [1m[35mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL PRIMARY KEY)[0m
  [1m[35m (1.3ms)[0m  [1m[35mCREATE TABLE "ar_internal_metadata" ("key" varchar NOT NULL PRIMARY KEY, "value" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Migrating to CreateLinks (20180809175115)
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35m (0.4ms)[0m  [1m[35mCREATE TABLE "links" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "url" varchar, "description" text, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL)[0m
  [1m[35mSQL (0.1ms)[0m  [1m[32mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20180809175115"]]
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
  [1m[36mActiveRecord::InternalMetadata Load (0.1ms)[0m  [1m[34mSELECT  "ar_internal_metadata".* FROM "ar_internal_metadata" WHERE "ar_internal_metadata"."key" = ? LIMIT ?[0m  [["key", "environment"], ["LIMIT", 1]]
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "ar_internal_metadata" ("key", "value", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["key", "environment"], ["value", "development"], ["created_at", "2018-08-09 17:51:39.907804"], ["updated_at", "2018-08-09 17:51:39.907804"]]
  [1m[35m (0.9ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.4ms)[0m  [1m[32mINSERT INTO "links" ("url", "description", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["url", "http://graphql.org/"], ["description", "The Best Query Language"], ["created_at", "2018-08-09 17:53:55.913817"], ["updated_at", "2018-08-09 17:53:55.913817"]]
  [1m[35m (1.4ms)[0m  [1m[36mcommit transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.3ms)[0m  [1m[32mINSERT INTO "links" ("url", "description", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["url", "http://dev.apollodata.com/"], ["description", "Awesome GraphQL Client"], ["created_at", "2018-08-09 17:54:00.744089"], ["updated_at", "2018-08-09 17:54:00.744089"]]
  [1m[35m (1.5ms)[0m  [1m[36mcommit transaction[0m
Started GET "/graphiql" for 127.0.0.1 at 2018-08-09 12:58:08 -0500
  [1m[35m (0.3ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/carolina/.rvm/gems/ruby-2.2.8/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/carolina/.rvm/gems/ruby-2.2.8/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (1975.7ms)
Completed 200 OK in 2038ms (Views: 2021.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-09 12:58:12 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 97ms (Views: 22.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-09 12:58:33 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"# Welcome to GraphiQL\n#\n# GraphiQL is an in-browser tool for writing, validating, and\n# testing GraphQL queries.\n#\n# Type queries into this side of the screen, and you will see intelligent\n# typeaheads aware of the current GraphQL type schema and live syntax and\n# validation errors highlighted within the text.\n#\n# GraphQL queries typically start with a \"{\" character. Lines that starts\n# with a # are ignored.\n#\n# An example GraphQL query might look like:\n#\n#     {\n#       field(arg: \"value\") {\n#         subField\n#       }\n#     }\n#\n# Keyboard shortcuts:\n#\n#       Run Query:  Ctrl-Enter (or press the play button above)\n#\n#   Auto Complete:  Ctrl-Space (or just start typing)\n#\n\n", "variables"=>nil, "graphql"=>{"query"=>"# Welcome to GraphiQL\n#\n# GraphiQL is an in-browser tool for writing, validating, and\n# testing GraphQL queries.\n#\n# Type queries into this side of the screen, and you will see intelligent\n# typeaheads aware of the current GraphQL type schema and live syntax and\n# validation errors highlighted within the text.\n#\n# GraphQL queries typically start with a \"{\" character. Lines that starts\n# with a # are ignored.\n#\n# An example GraphQL query might look like:\n#\n#     {\n#       field(arg: \"value\") {\n#         subField\n#       }\n#     }\n#\n# Keyboard shortcuts:\n#\n#       Run Query:  Ctrl-Enter (or press the play button above)\n#\n#   Auto Complete:  Ctrl-Space (or just start typing)\n#\n\n", "variables"=>nil}}
Completed 200 OK in 2ms (Views: 0.1ms | ActiveRecord: 0.0ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-08-09 12:58:50 -0500
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/carolina/.rvm/gems/ruby-2.2.8/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/carolina/.rvm/gems/ruby-2.2.8/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (61.0ms)
Completed 200 OK in 71ms (Views: 67.3ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-09 12:58:50 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 97ms (Views: 12.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-09 12:59:55 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  allLinks {\n    id\n    url\n    description\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  allLinks {\n    id\n    url\n    description\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mLink Load (0.7ms)[0m  [1m[34mSELECT "links".* FROM "links"[0m
Completed 200 OK in 83ms (Views: 0.3ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-09 14:54:11 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  createLink(\n    url: \"https://google.com\",\n\t\tdescription: \"It's Google\",\n  ) {\n    id\n    url\n    description\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  createLink(\n    url: \"https://google.com\",\n\t\tdescription: \"It's Google\",\n  ) {\n    id\n    url\n    description\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 105ms (Views: 0.5ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-08-09 14:56:26 -0500
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/carolina/.rvm/gems/ruby-2.2.8/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/carolina/.rvm/gems/ruby-2.2.8/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (839.4ms)
Completed 200 OK in 892ms (Views: 880.3ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-09 14:56:29 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 187ms (Views: 21.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-09 14:56:35 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"{\n  createLink(\n    url: \"https://google.com\",\n\t\tdescription: \"It's Google\",\n  ) {\n    id\n    url\n    description\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"{\n  createLink(\n    url: \"https://google.com\",\n\t\tdescription: \"It's Google\",\n  ) {\n    id\n    url\n    description\n  }\n}", "variables"=>nil, "operationName"=>nil}}
Completed 200 OK in 6ms (Views: 0.4ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-09 15:05:43 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createLink(\n    url: \"https://google.com\",\n\t\tdescription: \"It's Google\",\n  ) {\n    id\n    url\n    description\n  }\n}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createLink(\n    url: \"https://google.com\",\n\t\tdescription: \"It's Google\",\n  ) {\n    id\n    url\n    description\n  }\n}", "variables"=>nil}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (21.8ms)[0m  [1m[32mINSERT INTO "links" ("url", "description", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["url", "https://google.com"], ["description", "It's Google"], ["created_at", "2018-08-09 20:05:44.126329"], ["updated_at", "2018-08-09 20:05:44.126329"]]
  [1m[35m (1.3ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 97ms (Views: 0.2ms | ActiveRecord: 24.1ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-09 15:06:59 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"#mutation {\n#  createLink(\n#    url: \"https://google.com\",\n#\t\tdescription: \"It's Google\",\n#  ) {\n#    id\n#    url\n#    description\n#  }\n#}\n\n\n{\n  allLinks {\n    id\n    url\n    description\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"#mutation {\n#  createLink(\n#    url: \"https://google.com\",\n#\t\tdescription: \"It's Google\",\n#  ) {\n#    id\n#    url\n#    description\n#  }\n#}\n\n\n{\n  allLinks {\n    id\n    url\n    description\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mLink Load (14.5ms)[0m  [1m[34mSELECT "links".* FROM "links"[0m
Completed 200 OK in 38ms (Views: 0.4ms | ActiveRecord: 14.5ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-08-09 15:22:37 -0500
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/carolina/.rvm/gems/ruby-2.2.8/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/carolina/.rvm/gems/ruby-2.2.8/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (615.8ms)
Completed 200 OK in 683ms (Views: 667.7ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-09 15:22:39 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 211ms (Views: 19.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-09 15:22:41 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"#mutation {\n#  createLink(\n#    url: \"https://google.com\",\n#\t\tdescription: \"It's Google\",\n#  ) {\n#    id\n#    url\n#    description\n#  }\n#}\n\n\n{\n  allLinks {\n    id\n    url\n    description\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"#mutation {\n#  createLink(\n#    url: \"https://google.com\",\n#\t\tdescription: \"It's Google\",\n#  ) {\n#    id\n#    url\n#    description\n#  }\n#}\n\n\n{\n  allLinks {\n    id\n    url\n    description\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mLink Load (0.1ms)[0m  [1m[34mSELECT "links".* FROM "links"[0m
Completed 200 OK in 97ms (Views: 0.3ms | ActiveRecord: 1.6ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-09 15:23:20 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"mutation {\n  createLink(\n    url: \"https://youtube.com\",\n\t\tdescription: \"It's Youtube\",\n  ) {\n    id\n    url\n    description\n  }\n}\n\n\n\#{\n#  allLinks {\n#    id\n#   url\n#    description\n#  }\n#}", "variables"=>nil, "graphql"=>{"query"=>"mutation {\n  createLink(\n    url: \"https://youtube.com\",\n\t\tdescription: \"It's Youtube\",\n  ) {\n    id\n    url\n    description\n  }\n}\n\n\n\#{\n#  allLinks {\n#    id\n#   url\n#    description\n#  }\n#}", "variables"=>nil}}
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
  [1m[35mSQL (0.7ms)[0m  [1m[32mINSERT INTO "links" ("url", "description", "created_at", "updated_at") VALUES (?, ?, ?, ?)[0m  [["url", "https://youtube.com"], ["description", "It's Youtube"], ["created_at", "2018-08-09 20:23:20.733951"], ["updated_at", "2018-08-09 20:23:20.733951"]]
  [1m[35m (1.1ms)[0m  [1m[36mcommit transaction[0m
Completed 200 OK in 8ms (Views: 0.2ms | ActiveRecord: 1.9ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-09 15:23:39 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"#mutation {\n#  createLink(\n#    url: \"https://youtube.com\",\n#\t\tdescription: \"It's Youtube\",\n#  ) {\n#    id\n#    url\n#    description\n#  }\n#}\n\n\n{\n  allLinks {\n    id\n   url\n    description\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"#mutation {\n#  createLink(\n#    url: \"https://youtube.com\",\n#\t\tdescription: \"It's Youtube\",\n#  ) {\n#    id\n#    url\n#    description\n#  }\n#}\n\n\n{\n  allLinks {\n    id\n   url\n    description\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mLink Load (0.3ms)[0m  [1m[34mSELECT "links".* FROM "links"[0m
Completed 200 OK in 5ms (Views: 0.7ms | ActiveRecord: 0.3ms)


Started GET "/graphiql" for 127.0.0.1 at 2018-08-09 15:29:07 -0500
  [1m[35m (0.2ms)[0m  [1m[34mSELECT "schema_migrations"."version" FROM "schema_migrations" ORDER BY "schema_migrations"."version" ASC[0m
Processing by GraphiQL::Rails::EditorsController#show as HTML
  Parameters: {"graphql_path"=>"/graphql"}
  Rendering /Users/carolina/.rvm/gems/ruby-2.2.8/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb
  Rendered /Users/carolina/.rvm/gems/ruby-2.2.8/gems/graphiql-rails-1.4.4/app/views/graphiql/rails/editors/show.html.erb (624.4ms)
Completed 200 OK in 687ms (Views: 660.9ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-09 15:29:09 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n", "graphql"=>{"query"=>"\n  query IntrospectionQuery {\n    __schema {\n      queryType { name }\n      mutationType { name }\n      subscriptionType { name }\n      types {\n        ...FullType\n      }\n      directives {\n        name\n        description\n        locations\n        args {\n          ...InputValue\n        }\n      }\n    }\n  }\n\n  fragment FullType on __Type {\n    kind\n    name\n    description\n    fields(includeDeprecated: true) {\n      name\n      description\n      args {\n        ...InputValue\n      }\n      type {\n        ...TypeRef\n      }\n      isDeprecated\n      deprecationReason\n    }\n    inputFields {\n      ...InputValue\n    }\n    interfaces {\n      ...TypeRef\n    }\n    enumValues(includeDeprecated: true) {\n      name\n      description\n      isDeprecated\n      deprecationReason\n    }\n    possibleTypes {\n      ...TypeRef\n    }\n  }\n\n  fragment InputValue on __InputValue {\n    name\n    description\n    type { ...TypeRef }\n    defaultValue\n  }\n\n  fragment TypeRef on __Type {\n    kind\n    name\n    ofType {\n      kind\n      name\n      ofType {\n        kind\n        name\n        ofType {\n          kind\n          name\n          ofType {\n            kind\n            name\n            ofType {\n              kind\n              name\n              ofType {\n                kind\n                name\n                ofType {\n                  kind\n                  name\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n"}}
Completed 200 OK in 184ms (Views: 25.2ms | ActiveRecord: 0.0ms)


Started POST "/graphql" for 127.0.0.1 at 2018-08-09 15:29:22 -0500
Processing by GraphqlController#execute as */*
  Parameters: {"query"=>"#mutation {\n#  createLink(\n#    url: \"https://youtube.com\",\n#\t\tdescription: \"It's Youtube\",\n#  ) {\n#    id\n#    url\n#    description\n#  }\n#}\n\n\n{\n  allLinks {\n    id\n   url\n    description\n  }\n}", "variables"=>nil, "operationName"=>nil, "graphql"=>{"query"=>"#mutation {\n#  createLink(\n#    url: \"https://youtube.com\",\n#\t\tdescription: \"It's Youtube\",\n#  ) {\n#    id\n#    url\n#    description\n#  }\n#}\n\n\n{\n  allLinks {\n    id\n   url\n    description\n  }\n}", "variables"=>nil, "operationName"=>nil}}
  [1m[36mLink Load (8.2ms)[0m  [1m[34mSELECT "links".* FROM "links"[0m
Completed 200 OK in 77ms (Views: 0.5ms | ActiveRecord: 9.1ms)


